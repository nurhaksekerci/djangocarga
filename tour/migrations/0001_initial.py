# Generated by Django 5.1.7 on 2025-03-29 18:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Activity Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='ActivitySupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Supplier Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Company Name')),
                ('short_name', models.CharField(max_length=50, unique=True, verbose_name='Short Name')),
                ('contact', models.CharField(max_length=255, verbose_name='Contact')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name_plural': 'Buyer Companies',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='City Name')),
                ('code', models.CharField(max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(10)], verbose_name='City Code')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Para Birimi Kodu')),
                ('name', models.CharField(max_length=50, verbose_name='Para Birimi Adı')),
                ('symbol', models.CharField(max_length=5, verbose_name='Sembol')),
            ],
            options={
                'verbose_name': 'Para Birimi',
                'verbose_name_plural': 'Para Birimleri',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Vehicle Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Vehicle Type',
                'verbose_name_plural': 'Vehicle Types',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon Numarası')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Erkek'), ('female', 'Kadın'), ('other', 'Diğer')], max_length=10, null=True, verbose_name='Cinsiyet')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/', verbose_name='Profil Fotoğrafı')),
                ('role', models.CharField(choices=[('admin', 'Sistem Yöneticisi'), ('company_admin', 'Şirket Yöneticisi'), ('manager', 'Müdür'), ('operation_chief', 'Operasyon Şefi'), ('operation_staff', 'Operasyon Personeli'), ('accounting', 'Muhasebe')], default='employee', max_length=20, verbose_name='Rol')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tour.activity', verbose_name='Activity')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tour.activitysupplier', verbose_name='Supplier')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='activity_costs', to='tour.currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Activity Cost',
                'verbose_name_plural': 'Activity Costs',
            },
        ),
        migrations.AddField(
            model_name='activitysupplier',
            name='cities',
            field=models.ManyToManyField(to='tour.city', verbose_name='Service Cities'),
        ),
        migrations.AddField(
            model_name='activity',
            name='cities',
            field=models.ManyToManyField(to='tour.city', verbose_name='Cities'),
        ),
        migrations.CreateModel(
            name='ActivityCostHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField(verbose_name='Valid From')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('activity_cost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='tour.activitycost')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tour.currency')),
            ],
            options={
                'verbose_name': 'Activity Cost History',
                'verbose_name_plural': 'Activity Cost Histories',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='District Name')),
                ('code', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(10)], verbose_name='District Code')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='tour.city')),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'unique_together': {('city', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Guide Name')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('document_no', models.CharField(max_length=50, verbose_name='Document Number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('cities', models.ManyToManyField(to='tour.city', verbose_name='Cities')),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Hotel Name')),
                ('single_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Single Room Price')),
                ('double_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Double Room Price')),
                ('triple_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Family Room Price')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tour.city', verbose_name='City')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hotels', to='tour.currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Hotel',
                'verbose_name_plural': 'Hotels',
            },
        ),
        migrations.CreateModel(
            name='HotelPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField(verbose_name='Valid From')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('single_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('double_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('triple_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tour.currency')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='tour.hotel')),
            ],
            options={
                'verbose_name': 'Hotel Price History',
                'verbose_name_plural': 'Hotel Price Histories',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='Museum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Museum Name')),
                ('local_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Local Price')),
                ('foreign_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Foreign Price')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tour.city', verbose_name='City')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='museums', to='tour.currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Museum',
                'verbose_name_plural': 'Museums',
            },
        ),
        migrations.CreateModel(
            name='MuseumPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField(verbose_name='Valid From')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('local_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('foreign_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tour.currency')),
                ('museum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='tour.museum')),
            ],
            options={
                'verbose_name': 'Museum Price History',
                'verbose_name_plural': 'Museum Price Histories',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='NoVehicleTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tour Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tour.city', verbose_name='City')),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Reference Number')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('status', models.CharField(choices=[('DRAFT', 'Taslak'), ('CONFIRMED', 'Onaylandı'), ('COMPLETED', 'Tamamlandı'), ('CANCELLED', 'İptal Edildi')], default='DRAFT', max_length=20, verbose_name='Status')),
                ('total_pax', models.PositiveIntegerField(default=0, verbose_name='Total Pax')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('buyer_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tour.buyercompany', verbose_name='Buyer Company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_operations', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('follow_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='following_operations', to=settings.AUTH_USER_MODEL, verbose_name='Follow By')),
            ],
            options={
                'verbose_name': 'Operation',
                'verbose_name_plural': 'Operations',
                'ordering': ['-start_date', 'reference_number'],
            },
        ),
        migrations.CreateModel(
            name='OperationCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('customer_type', models.CharField(choices=[('ADULT', 'Yetişkin'), ('CHILD', 'Çocuk'), ('INFANT', 'Bebek')], max_length=20, verbose_name='Customer Type')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('passport_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Passport No')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_buyer', models.BooleanField(default=False, verbose_name='Is Buyer')),
                ('contact_info', models.CharField(blank=True, help_text='Phone number or email', max_length=100, null=True, verbose_name='Contact Info')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='tour.operation', verbose_name='Operation')),
            ],
            options={
                'verbose_name': 'Operation Customer',
                'verbose_name_plural': 'Operation Customers',
            },
        ),
        migrations.CreateModel(
            name='OperationDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='tour.operation', verbose_name='Operation')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='OperationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('VEHICLE', 'Araçlı'), ('NO_VEHICLE_TOUR', 'Araçsız Tur'), ('NO_VEHICLE_ACTIVITY', 'Araçsız Aktivite')], max_length=20, verbose_name='Item Type')),
                ('pick_time', models.TimeField(blank=True, null=True, verbose_name='Pick Time')),
                ('pick_up_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pick Up Location')),
                ('drop_off_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Drop Off Location')),
                ('driver_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Driver Name')),
                ('driver_phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Driver Phone')),
                ('vehicle_plate_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vehicle Plate No')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('sales_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Sales Price')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('activity_cost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tour.activitycost', verbose_name='Activity Cost')),
                ('activity_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.activitysupplier', verbose_name='Activity Supplier')),
                ('cost_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='item_cost_currency', to='tour.currency', verbose_name='Cost Currency')),
                ('no_vehicle_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.activity', verbose_name='No Vehicle Activity')),
                ('no_vehicle_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.novehicletour', verbose_name='No Vehicle Tour')),
                ('operation_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='tour.operationday', verbose_name='Operation Day')),
                ('sales_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='item_sales_currency', to='tour.currency', verbose_name='Sales Currency')),
            ],
            options={
                'verbose_name': 'Operation Item',
                'verbose_name_plural': 'Operation Items',
                'ordering': ['pick_time'],
            },
        ),
        migrations.CreateModel(
            name='OperationSalesPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tour.currency', verbose_name='Currency')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_prices', to='tour.operation', verbose_name='Operation')),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Tour Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('end_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tour_ends', to='tour.city', verbose_name='End City')),
                ('start_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tour_starts', to='tour.city', verbose_name='Start City')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Transfer Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('end_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_ends', to='tour.city', verbose_name='End City')),
                ('start_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_starts', to='tour.city', verbose_name='Start City')),
            ],
        ),
        migrations.CreateModel(
            name='OperationSubItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(verbose_name='Ordering')),
                ('subitem_type', models.CharField(choices=[('TOUR', 'Tur'), ('TRANSFER', 'Transfer'), ('ACTIVITY', 'Aktivite'), ('MUSEUM', 'Müze'), ('HOTEL', 'Otel'), ('GUIDE', 'Rehber'), ('OTHER_PRICE', 'Diğer Ücret')], max_length=20, verbose_name='Subitem Type')),
                ('room_type', models.CharField(blank=True, choices=[('SINGLE', 'Tek Kişilik'), ('DOUBLE', 'Çift Kişilik'), ('TRIPLE', 'Aile')], max_length=20, null=True, verbose_name='Room Type')),
                ('is_guide', models.BooleanField(default=False, verbose_name='Is Guide')),
                ('other_price_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Other Price Description')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('sales_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Sales Price')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.activity', verbose_name='Activity')),
                ('activity_cost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tour.activitycost', verbose_name='Activity Cost')),
                ('activity_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.activitysupplier', verbose_name='Activity Supplier')),
                ('cost_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subitem_cost_currency', to='tour.currency', verbose_name='Cost Currency')),
                ('guide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.guide', verbose_name='Guide')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.hotel', verbose_name='Hotel')),
                ('museums', models.ManyToManyField(blank=True, null=True, related_name='museums', to='tour.museum', verbose_name='Museums')),
                ('operation_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subitems', to='tour.operationitem', verbose_name='Operation Item')),
                ('sales_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subitem_sales_currency', to='tour.currency', verbose_name='Sales Currency')),
                ('tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.tour', verbose_name='Tour')),
                ('transfer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.transfer', verbose_name='Transfer')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='VehicleCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Car Cost')),
                ('minivan_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Minivan Cost')),
                ('minibus_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Minibus Cost')),
                ('midibus_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Midibus Cost')),
                ('bus_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Bus Cost')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_costs', to='tour.currency', verbose_name='Currency')),
                ('tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tour.tour', verbose_name='Tour')),
                ('transfer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tour.transfer', verbose_name='Transfer')),
            ],
            options={
                'verbose_name': 'Vehicle Cost',
                'verbose_name_plural': 'Vehicle Costs',
            },
        ),
        migrations.AddField(
            model_name='operationitem',
            name='vehicle_cost',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tour.vehiclecost', verbose_name='Vehicle Cost'),
        ),
        migrations.CreateModel(
            name='VehicleCostHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField(verbose_name='Valid From')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('car_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minivan_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minibus_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('midibus_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bus_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tour.currency')),
                ('vehicle_cost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='tour.vehiclecost')),
            ],
            options={
                'verbose_name': 'Vehicle Cost History',
                'verbose_name_plural': 'Vehicle Cost Histories',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='VehicleSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Supplier Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('cities', models.ManyToManyField(to='tour.city', verbose_name='Service Cities')),
            ],
        ),
        migrations.AddField(
            model_name='vehiclecost',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tour.vehiclesupplier', verbose_name='Supplier'),
        ),
        migrations.AddField(
            model_name='operationitem',
            name='vehicle_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.vehiclesupplier', verbose_name='Vehicle Supplier'),
        ),
        migrations.AddField(
            model_name='operationitem',
            name='vehicle_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tour.vehicletype', verbose_name='Vehicle Type'),
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Neighborhood Name')),
                ('code', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(10)], verbose_name='Neighborhood Code')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neighborhoods', to='tour.district')),
            ],
            options={
                'verbose_name': 'Neighborhood',
                'verbose_name_plural': 'Neighborhoods',
                'unique_together': {('district', 'name')},
            },
        ),
    ]
